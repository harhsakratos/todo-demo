{"ast":null,"code":"var _jsxFileName = \"I:\\\\react practice\\\\todo-app\\\\src\\\\components\\\\TaskForm.jsx\";\nimport { Button, Cascader, Form, Input, Select, TreeSelect } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  let PriorityOptions = [{\n    value: \"One\"\n  }, {\n    value: \"Two\"\n  }, {\n    value: \"Three\"\n  }];\n  let StatusOptions = [{\n    value: \"New\"\n  }, {\n    value: \"In Progress\"\n  }, {\n    value: \"Complete\"\n  }, {\n    value: \"Discarded\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TODO - APP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      labelCol: {\n        span: 4\n      },\n      wrapperCol: {\n        span: 14\n      },\n      layout: \"horizontal\",\n      style: {\n        maxWidth: 600\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Task\",\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Priority\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          options: PriorityOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Status\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          options: StatusOptions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["Button","Cascader","Form","Input","Select","TreeSelect","jsxDEV","_jsxDEV","TaskForm","PriorityOptions","value","StatusOptions","style","display","alignItems","children","fileName","_jsxFileName","lineNumber","columnNumber","labelCol","span","wrapperCol","layout","maxWidth","Item","label","options","_c","$RefreshReg$"],"sources":["I:/react practice/todo-app/src/components/TaskForm.jsx"],"sourcesContent":["import { Button, Cascader, Form, Input, Select, TreeSelect } from \"antd\";\r\n\r\nconst TaskForm = () => {\r\n  let PriorityOptions = [\r\n    { value: \"One\" },\r\n    { value: \"Two\" },\r\n    { value: \"Three\" },\r\n  ];\r\n  let StatusOptions = [\r\n    { value: \"New\" },\r\n    { value: \"In Progress\" },\r\n    { value: \"Complete\" },\r\n    { value: \"Discarded\" },\r\n  ];\r\n\r\n  return (\r\n    <div style={{ display:'flex', alignItems:'center'}}>\r\n      <h1>TODO - APP</h1>\r\n      <Form\r\n        labelCol={{\r\n          span: 4,\r\n        }}\r\n        wrapperCol={{\r\n          span: 14,\r\n        }}\r\n        layout=\"horizontal\"\r\n        style={{\r\n          maxWidth: 600,\r\n        }}\r\n      >\r\n        <Form.Item label=\"Task\">\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item label=\"Priority\">\r\n          <Select options={PriorityOptions} />\r\n        </Form.Item>\r\n        <Form.Item label=\"Status\">\r\n          <Select options={StatusOptions} />\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\nexport default TaskForm;\r\n"],"mappings":";AAAA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,UAAU,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,IAAIC,eAAe,GAAG,CACpB;IAAEC,KAAK,EAAE;EAAM,CAAC,EAChB;IAAEA,KAAK,EAAE;EAAM,CAAC,EAChB;IAAEA,KAAK,EAAE;EAAQ,CAAC,CACnB;EACD,IAAIC,aAAa,GAAG,CAClB;IAAED,KAAK,EAAE;EAAM,CAAC,EAChB;IAAEA,KAAK,EAAE;EAAc,CAAC,EACxB;IAAEA,KAAK,EAAE;EAAW,CAAC,EACrB;IAAEA,KAAK,EAAE;EAAY,CAAC,CACvB;EAED,oBACEH,OAAA;IAAKK,KAAK,EAAE;MAAEC,OAAO,EAAC,MAAM;MAAEC,UAAU,EAAC;IAAQ,CAAE;IAAAC,QAAA,gBACjDR,OAAA;MAAAQ,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBZ,OAAA,CAACL,IAAI;MACHkB,QAAQ,EAAE;QACRC,IAAI,EAAE;MACR,CAAE;MACFC,UAAU,EAAE;QACVD,IAAI,EAAE;MACR,CAAE;MACFE,MAAM,EAAC,YAAY;MACnBX,KAAK,EAAE;QACLY,QAAQ,EAAE;MACZ,CAAE;MAAAT,QAAA,gBAEFR,OAAA,CAACL,IAAI,CAACuB,IAAI;QAACC,KAAK,EAAC,MAAM;QAAAX,QAAA,eACrBR,OAAA,CAACJ,KAAK;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACZZ,OAAA,CAACL,IAAI,CAACuB,IAAI;QAACC,KAAK,EAAC,UAAU;QAAAX,QAAA,eACzBR,OAAA,CAACH,MAAM;UAACuB,OAAO,EAAElB;QAAgB;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B,CAAC,eACZZ,OAAA,CAACL,IAAI,CAACuB,IAAI;QAACC,KAAK,EAAC,QAAQ;QAAAX,QAAA,eACvBR,OAAA,CAACH,MAAM;UAACuB,OAAO,EAAEhB;QAAc;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACS,EAAA,GAxCIpB,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}