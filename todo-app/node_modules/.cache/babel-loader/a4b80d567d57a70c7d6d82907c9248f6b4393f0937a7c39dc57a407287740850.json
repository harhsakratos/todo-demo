{"ast":null,"code":"var _jsxFileName = \"I:\\\\react practice\\\\todo-app\\\\src\\\\components\\\\TaskForm.jsx\";\nimport { Button, Form, Input, Select } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = () => {\n  let PriorityOptions = [{\n    value: \"One\"\n  }, {\n    value: \"Two\"\n  }, {\n    value: \"Three\"\n  }];\n  let StatusOptions = [{\n    value: \"New\"\n  }, {\n    value: \"In Progress\"\n  }, {\n    value: \"Complete\"\n  }, {\n    value: \"Discarded\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TODO - APP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        labelCol: {\n          span: 4\n        },\n        wrapperCol: {\n          span: 14\n        },\n        layout: \"horizontal\",\n        style: {\n          maxWidth: 600\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Task\",\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Priority\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            options: PriorityOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Status\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            options: StatusOptions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"solid\",\n        style: {\n          width: \"10vw\"\n        },\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n        color: \"danger\",\n        variant: \"solid\",\n        style: {\n          width: \"10vw\"\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["Button","Form","Input","Select","jsxDEV","_jsxDEV","TaskForm","PriorityOptions","value","StatusOptions","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","display","labelCol","span","wrapperCol","layout","maxWidth","Item","label","options","color","variant","width","_c","$RefreshReg$"],"sources":["I:/react practice/todo-app/src/components/TaskForm.jsx"],"sourcesContent":["import { Button, Form, Input, Select } from \"antd\";\r\n\r\nconst TaskForm = () => {\r\n  let PriorityOptions = [\r\n    { value: \"One\" },\r\n    { value: \"Two\" },\r\n    { value: \"Three\" },\r\n  ];\r\n  let StatusOptions = [\r\n    { value: \"New\" },\r\n    { value: \"In Progress\" },\r\n    { value: \"Complete\" },\r\n    { value: \"Discarded\" },\r\n  ];\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <h1>TODO - APP</h1>\r\n      <div style={{ display:\"\"}}>\r\n        <Form\r\n          labelCol={{\r\n            span: 4,\r\n          }}\r\n          wrapperCol={{\r\n            span: 14,\r\n          }}\r\n          layout=\"horizontal\"\r\n          style={{\r\n            maxWidth: 600,\r\n          }}\r\n        >\r\n          <Form.Item label=\"Task\">\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label=\"Priority\">\r\n            <Select options={PriorityOptions} />\r\n          </Form.Item>\r\n          <Form.Item label=\"Status\">\r\n            <Select options={StatusOptions} />\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n      <div>\r\n        <Button color=\"primary\" variant=\"solid\" style={{ width: \"10vw\" }}>\r\n          Add Task\r\n        </Button>{\" \"}\r\n        <Button color=\"danger\" variant=\"solid\" style={{ width: \"10vw\" }}>\r\n          Reset\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default TaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}