{"ast":null,"code":"var _jsxFileName = \"I:\\\\react practice\\\\todo-app\\\\src\\\\components\\\\TaskTable.jsx\";\nimport { Table } from \"antd\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskTable = () => {\n  const columns = [{\n    title: \"Task Name\",\n    dataIndex: \"taskName\",\n    key: \"taskName\"\n  }, {\n    title: \"Status\",\n    dataIndex: \"status\",\n    key: \"status\"\n  }, {\n    title: \"Last Updated Time\",\n    dataIndex: \"lastUpdatedTime\",\n    key: \"lastUpdatedTime\"\n  }, {\n    title: \"Priority\",\n    dataIndex: \"priority\",\n    key: \"priority\"\n  }, {\n    title: \"Description\",\n    dataIndex: \"description\",\n    key: \"description\"\n  }, {\n    title: \"Action\",\n    dataIndex: \"action\",\n    key: \"action\"\n  }];\n  const dataSource = [{\n    key: \"1\",\n    taskName: \"Mike\",\n    lastUpdatedTime: 32,\n    priority: \"one\",\n    description: \"Need to go to gym tommorow at 5:15 AM\",\n    action\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      dataSource: dataSource,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true);\n};\n_c = TaskTable;\nexport default TaskTable;\nvar _c;\n$RefreshReg$(_c, \"TaskTable\");","map":{"version":3,"names":["Table","React","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskTable","columns","title","dataIndex","key","dataSource","taskName","lastUpdatedTime","priority","description","action","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["I:/react practice/todo-app/src/components/TaskTable.jsx"],"sourcesContent":["import { Table } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst TaskTable = () => {\r\n  const columns = [\r\n    {\r\n      title: \"Task Name\",\r\n      dataIndex: \"taskName\",\r\n      key: \"taskName\",\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\",\r\n      key: \"status\",\r\n    },\r\n    {\r\n      title: \"Last Updated Time\",\r\n      dataIndex: \"lastUpdatedTime\",\r\n      key: \"lastUpdatedTime\",\r\n    },\r\n    {\r\n      title: \"Priority\",\r\n      dataIndex: \"priority\",\r\n      key: \"priority\",\r\n    },\r\n    {\r\n      title: \"Description\",\r\n      dataIndex: \"description\",\r\n      key: \"description\",\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"action\",\r\n      key: \"action\",\r\n    },\r\n  ];\r\n\r\n  const dataSource = [\r\n    {\r\n      key: \"1\",\r\n      taskName: \"Mike\",\r\n      lastUpdatedTime: 32,\r\n      priority: \"one\",\r\n      description:\"Need to go to gym tommorow at 5:15 AM\",\r\n      action\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Table dataSource={dataSource} columns={columns} />;\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskTable;\r\n"],"mappings":";AAAA,SAASA,KAAK,QAAQ,MAAM;AAC5B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAMC,OAAO,GAAG,CACd;IACEC,KAAK,EAAE,WAAW;IAClBC,SAAS,EAAE,UAAU;IACrBC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,QAAQ;IACnBC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,mBAAmB;IAC1BC,SAAS,EAAE,iBAAiB;IAC5BC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,UAAU;IACjBC,SAAS,EAAE,UAAU;IACrBC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,aAAa;IACpBC,SAAS,EAAE,aAAa;IACxBC,GAAG,EAAE;EACP,CAAC,EACD;IACEF,KAAK,EAAE,QAAQ;IACfC,SAAS,EAAE,QAAQ;IACnBC,GAAG,EAAE;EACP,CAAC,CACF;EAED,MAAMC,UAAU,GAAG,CACjB;IACED,GAAG,EAAE,GAAG;IACRE,QAAQ,EAAE,MAAM;IAChBC,eAAe,EAAE,EAAE;IACnBC,QAAQ,EAAE,KAAK;IACfC,WAAW,EAAC,uCAAuC;IACnDC;EACF,CAAC,CACF;EAED,oBACEb,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA,CAACH,KAAK;MAACW,UAAU,EAAEA,UAAW;MAACJ,OAAO,EAAEA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KACrD;EAAA,eAAE,CAAC;AAEP,CAAC;AAACC,EAAA,GAlDIhB,SAAS;AAoDf,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}